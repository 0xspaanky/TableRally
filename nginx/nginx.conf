
upstream backend {
    server backend:8000;
}

upstream chat {
    server chat:8000;
}

upstream ponggame {
    server ponggame:8000;
}

upstream ticgame {
    server ticgame:8000;
}

server {
    listen 81;
    return 200 "nginx is running";
}

server {
    
    listen 443 ssl;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /etc/nginx/ssl/trandandan.crt;
    ssl_certificate_key /etc/nginx/ssl/trandandan.key;

     # Serve the main SPA entry point for all other routes
    location / {
        root /usr/share/nginx/html/backend;
        index index.html index.htm;
        try_files $uri /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # location / {
    #     alias /files/frontend/;
    #     try_files $uri $uri/ /index.html;
    # }
    
    # Serve static files
    location /static/ {
        alias /staticfiles/;  # Must match the mount point in docker-compose.yml
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Serve media files
    location /media/ {
        alias /media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Proxy API requests to the backend service
    location /auth/ {
        proxy_pass http://backend/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS Headers (if handling CORS via NGINX)
        add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /user/ {
        proxy_pass http://backend/user/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS Headers
        add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /friends/ {
        proxy_pass http://backend/friends/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS Headers
        add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /admin/ {
        proxy_pass http://backend/admin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS Headers (optional, generally not needed for SPA routes)
        add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /chat {
        auth_request /check;
        root /usr/share/nginx/html/;
        index chat.html;
        try_files $uri $uri/ =404;
    }

    location /ponggame {
        auth_request /check;
        root /usr/share/nginx/html/;
        index play.html;
        try_files $uri $uri/ =404;
    }

    location /ticgame {
        auth_request /check;
        root /usr/share/nginx/html/;
        index home.html;
        try_files $uri $uri/ =404;
    }

    location /gamesByWinId/ {
        proxy_pass http://ticgame;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS Headers (optional, generally not needed for SPA routes)
        add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /api/ {
        proxy_pass http://chat;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS Headers (optional, generally not needed for SPA routes)
        add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    location /ws/chat/ {
        proxy_pass http://chat;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # proxy_read_timeout 86400;
    }

    location /ws/notification/ {
        proxy_pass http://chat;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # proxy_read_timeout 86400;
    }

    location /ws/game/ {
        proxy_pass http://ponggame;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # proxy_read_timeout 86400;
    }

    location /ws/play/ {
        proxy_pass http://ticgame;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # proxy_read_timeout 86400;
    }

    location /check {
        internal;
        proxy_pass http://backend/auth/get-access-token/;
        proxy_set_header X-Original-URI $request_uri;
    }
}
