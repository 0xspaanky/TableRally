services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - ./database/data:/var/lib/postgresql/data
    env_file: 
      - .env
    ports:
      - "5432:5432"
    networks:
      - backend_default
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 1m
      timeout: 5s
      retries: 5
      start_period: 30s
  
  backend:
    image: backend
    container_name: backend
    build:
      context: ./Backend
      dockerfile: Dockerfile
    volumes:
      - ./Backend/:/app/
      - ./Backend/media/:/media/
    depends_on:
      postgres:
        condition: service_healthy
    env_file: 
      - .env
    networks:
      - backend_default
    ports:
      - "8000:8000"
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://backend:8000/auth/health_checker/"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx
    container_name: nginx
    build: ./nginx/
    ports:
      - "443:443"  # Public HTTPS port
    volumes:
      - ./Backend/frontend:/usr/share/nginx/html/backend
      - ./Backend/staticfiles:/staticfiles/
      - ./Backend/media:/media/
      - ./Chat/frontend:/usr/share/nginx/html/chat
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - backend_default
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f https://nginx:443"]  # Updated to match exposed port
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  chat:
    container_name: chat
    image: chat
    build:
      context: ./Chat/
      dockerfile: ./backend/Dockerfile
    ports:
      - "9000:8000"
    networks:
      - backend_default
    restart: on-failure
    env_file: 
      - .env
    depends_on:
      postgres:
        condition: service_healthy  # Wait for postgres to be healthy
      backend:
        condition: service_healthy
    volumes:
      - ./Chat:/Chat
      - ./Backend:/Backend
        

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend_default

networks:
  backend_default:
    driver: bridge
