services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - ./database/data:/var/lib/postgresql/data
    env_file: 
      - .env
    ports:
      - "8432:5432"
    networks:
      - backend_default
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 1m
      timeout: 5s
      retries: 5
      start_period: 30s
    init: true
  
  backend:
    image: backend
    container_name: backend
    build:
      context: ./Backend
      dockerfile: Dockerfile
    volumes:
      - ./Backend/:/app/
      - ./Backend/media/:/media/
    depends_on:
      postgres:
        condition: service_healthy
    env_file: 
      - .env
    networks:
      - backend_default
    ports:
      - "8000:8000"
    restart: on-failure
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://backend:8000/auth/health_checker/"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    init: true

  nginx:
    image: nginx
    container_name: nginx
    build: ./nginx/
    ports:
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html/backend
      - ./Backend/staticfiles:/staticfiles/
      - ./Backend/media:/media/
      - ./Chat/frontend:/usr/share/nginx/html/chat
      - ./PongGame/front/content:/usr/share/nginx/html/ponggame
      - ./TicGame/frontend/:/usr/share/nginx/html/ticgame
    depends_on:
      backend:
        condition: service_healthy
      # chat:
      #   condition: service_healthy
    networks:
      - backend_default
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://nginx:81"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s 
    init: true

  chat:
    container_name: chat
    image: chat
    build:
      context: ./Chat/
      dockerfile: ./backend/Dockerfile
    ports:
      - "9000:8000"
    networks:
      - backend_default
    restart: on-failure
    env_file: 
      - .env
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./Chat:/Chat
      - ./Backend:/Backend
    healthcheck:
      test: ["CMD-SHELL", "echo", "CHAT OUI"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    init: true

  ponggame:
    build: ./PongGame/docker
    container_name: ponggame
    ports:
      - "9001:8000"
    restart: on-failure
    networks:
      - backend_default
    volumes:
      - ./PongGame/:/PongGame
      - ./Backend:/Backend
    env_file: 
      - .env
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "echo", "PONG OUI"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    init: true

  ticgame:
    build: ./TicGame/
    container_name: ticgame
    ports:
      - "9002:8000"
    restart: on-failure
    networks:
      - backend_default
    volumes:
      - ./TicGame/:/TicGame
      - ./Backend:/Backend
    env_file: 
      - .env
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "echo", "PONG OUI"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    init: true

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend_default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    init: true

networks:
  backend_default:
    driver: bridge
